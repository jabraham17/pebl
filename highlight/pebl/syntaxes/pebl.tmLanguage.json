{
  "name": "pebl",
  "scopeName": "source.pebl",
  "fileTypes": ["pebl"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#functions" },
    { "include": "#variables" },
    { "include": "#types" },
    { "include": "#operators" },
    { "include": "#builtins" },
    { "include": "#literals" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "match": "\\b(extern|export)\\b",
          "name": "storage.modifier.pebl"
        },
        {
          "match": "\\b(if|else|while|break|return)\\b",
          "name": "keyword.control.pebl"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "\\b(let)\\s+([_a-zA-Z0-9]+)\\b",
          "captures": {
            "1": {
              "name": "keyword.declaration.pebl"
            },
            "2": {
              "name": "variable.other.pebl"
            }
          }
        },
        {
          "match": "\\b(let)\\b",
          "name": "keyword.declaration.pebl"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "match": "\\b(func)\\s+([_a-zA-Z0-9]+)\\b",
          "captures": {
            "1": {
              "name": "storage.type.function.pebl keyword.declaration.function.pebl"
            },
            "2": {
              "name": "entity.name.function.pebl"
            }
          }
        },
        {
          "match": "\\b(func)\\b",
          "name": "storage.type.function.pebl keyword.declaration.function.pebl"
        },
        {
          "match": "\\b([_a-zA-Z0-9]+)\\s*\\(",
          "captures": {
            "1": {
              "name": "variable.function.pebl"
            }
          }
        }
      ]
    },
    "typenames": {
      "patterns": [
        {
          "match": "\\b(void)\\b",
          "name": "storage.type.pebl"
        },
        {
          "match": "\\b(int8|int64)\\b",
          "name": "storage.type.pebl"
        },
        {
          "match": "\\b(bool)\\b",
          "name": "storage.type.pebl"
        },
        {
          "match": "\\b(int|char|string)\\b",
          "name": "storage.type.pebl"
        },
        {
          "match": "\\*",
          "name": "keyword.operator.pebl"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "begin": "\\b(type)\\b",
          "end": ";|\\{",
          "beginCaptures": {
            "0": {
              "name": "storage.type.pebl keyword.declaration.type.pebl"
            }
          },
          "patterns": [
            { "include": "#typenames" },
            {
              "match": "[_a-zA-Z0-9]+",
              "name": "entity.name.type.pebl"
            }
          ]
        },
        {
          "begin": ":",
          "end": "[^ _a-zA-Z0-9]",
          "beginCaptures": {
            "0": {
              "name": "keyword.operator.pebl"
            }
          },
          "patterns": [
            { "include": "#typenames" },
            {
              "match": "[_a-zA-Z0-9]+",
              "name": "entity.name.type.pebl"
            }
          ]
        },
        { "include": "#typenames" }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "&&|\\|\\||<|>|<=|>=|==|!=|\\+|-|\\*|/|&|!|=|:",
          "name": "keyword.operator.pebl"
        }
      ]
    },
    "builtins": {
      "patterns": [
        {
          "match": "\\b(sizeof)\\b",
          "name": "keyword.other.sizeof.pebl"
        },
        {
          "match": "\\b(typeof)\\b",
          "name": "keyword.other.typeof.pebl"
        },
        {
          "match": "\\b(assert)\\b",
          "name": "keyword.other.assert.pebl"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "match": "\\b([0-9]+)\\b",
          "name": "constant.numeric.pebl"
        },
        {
          "match": "\\b(true)\\b",
          "name": "constant.language.true.pebl"
        },
        {
          "match": "\\b(false)\\b",
          "name": "constant.language.false.pebl"
        },
        {
          "begin": "\"",
          "end": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.pebl"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.pebl"
            }
          },
          "name": "string.quoted.double.pebl",
          "patterns": [
            {
              "match": "\\\\(\\\\|[nt0\"])",
              "name": "constant.character.escape.pebl"
            }
          ]
        },
        {
          "begin": "'",
          "end": "'",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.pebl"
            }
          },
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.pebl"
            }
          },
          "name": "string.quoted.single.pebl",
          "patterns": [
            {
              "match": "\\\\(\\\\|[nt0'])",
              "name": "constant.character.escape.pebl"
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "(#).*$\\n?",
          "name": "comment.line.number-sign.pebl",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.pebl"
            }
          }
        }
      ]
    }
  }
}
